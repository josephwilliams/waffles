# first element in triangle array is [75, 0]; easier to start with it out.
triangle =
[
[95, 64],
[17, 47, 82],
[18, 35, 87, 10],
[20, 4, 82, 47, 65],
[19, 1, 23, 75, 03, 34],
[88, 2, 77, 73, 7, 63, 67],
[99, 65, 4, 28, 06, 16, 70, 92],
[41, 41, 26, 56, 83, 40, 80, 70, 33],
[41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
[53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
[70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
[91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
[63, 66, 04, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
[4, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 4, 23]]

# level [0] starts at top of pyramid
path = [[75, 0]]

triangle.each_with_index do |level, idx|
   level.each_with_index do |value, pos|
      last_pos = path.last[1]
      if last_pos == 0
         path << [value, pos, idx] if value == [level[0], level[1]].max
      elsif last_pos == 1
         path << [value, pos, idx] if value == [level[0], level[1], level[2]].max
      else
         path << [value, pos, idx] if value == [level[last_pos - 1], level[last_pos], level[last_pos + 1]].max
      end
   end
end

p path

# my path (seemingly) randomly sometimes iterates through the same level/row of the triangle twice before moving down. why!?
